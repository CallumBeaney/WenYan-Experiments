PROGRAM CODE:

	注曰。「「是術施自然數的總和」」。 

	吾有一術、名之曰「計算」。
	欲行是術必先得一數曰「次」。
	乃行是術曰。
	   吾有一數、曰零。名之曰「地」。亦有數零、名之曰「合計」。
	      昔之「地」者。今「次」是矣。
	   為是「次」遍。
	      加「合計」以「地」。仍名之曰「合計」。
	      減「地」以一。仍名之曰「地」。
	   云云。
	   吾有二言。曰「「 自然數的總和：」」。曰「合計」之數。書之。
	是謂「計算」之術也。

	疏曰。「「欲改是術之數就得調整以下語法：施「計算」於這數。」」
	施「計算」於十。
	
OUTPUT: 自然數的總和： 五十五
 
 
TRANSLATION INTO ENGLISH PSEUDOCODE: 

	Please Observe: This function actualizes a sum of natural numbers.

	I have a technique, named "Calculate". 
	Those who wish to use this technique must first get a number named "Times". 
	Thereafter carry out this technique so:
	   I have a number, being 0. It is called "Ground". There is also the number 0, named "Sum".
	      The prior item "Ground" now becomes "Times".
	   For "Times" times:
	      Add "Times" to "Sum". It is still named "Sum".
	      Decrement "Ground" by 1, still named "Ground".
	   And so on.
	   I have two utterances, named "Sum of Natural Numbers:" and named the number of “Sum". Write them.
	Such is the technique named "Calculate".

	Annotation: Those who wish to change the number in this technique must adjust the below syntax:
	Put into effect "Calculate" with the number "10".
  

COMPILES TO JS AS:

	/*"是術施自然數的總和"*/
	var 計算 = _ => {};
	計算 = 次 => {
	  var 地 = 0;
	  var 合計 = 0;
	  地 = 次;
	  for (let _rand1 = 0; _rand1 < 次; _rand1++) {
	    const _ans1 = 合計 + 地;
	    var 合計 = _ans1;
	    const _ans2 = 地 - 1;
	    var 地 = _ans2;
	  };
	  var _ans3 = "自然數的總和：";
	  var _ans4 = 合計;
	  console.log(_ans3, _ans4);
	}; /*"欲改是術之數就得調整以下語法。"*/
	const _ans5 = 計算(10);


TEST:	https://ide.wy-lang.org/
